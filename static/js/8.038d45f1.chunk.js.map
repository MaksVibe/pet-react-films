{"version":3,"sources":["components/MovieDetailsPage/MovieDetailsPage.module.css","redux/auth/authSelectors.js","components/MovieDetailsPage/MovieDetailsPage.jsx","components/Routing/Routing.jsx"],"names":["module","exports","authSelectors","getIsLoggedIn","state","auth","isLoggedIn","getUsername","user","name","MovieDetailsPage","movie","useSelector","movies","items","navigate","useNavigate","className","type","onClick","s","MovieCard","id","title","year","format","actors","map","actor","join","AuthNav","lazy","Login","Register","NotFound","MovieList","Navigation","Library","RoutesNav","isLogedIn","path","element","to"],"mappings":"4GACAA,EAAOC,QAAU,CAAC,UAAY,oCAAoC,YAAc,sCAAsC,iBAAmB,2CAA2C,UAAY,oCAAoC,cAAgB,wCAAwC,oBAAsB,gD,iECQnSC,EALO,CACpBC,cALoB,SAACC,GAAD,OAAWA,EAAMC,KAAKC,YAM1CC,YAJkB,SAACH,GAAD,OAAWA,EAAMC,KAAKG,KAAKC,O,yBC6BhCC,EAzBU,WACvB,IAAMC,EAAQC,aAAY,SAACR,GAAD,OAAWA,EAAMS,OAAOC,SAE9CC,EAAWC,cAEf,OACE,sBAAKC,UAAU,YAAf,UACE,wBAAQC,KAAK,SAASD,UAAU,MAAME,QAAS,kBAAMJ,GAAU,IAA/D,qBAGCJ,GACC,sBAAKM,UAAWG,IAAEC,UAAlB,UACE,qCAAQV,EAAMW,MACd,6BAAKX,EAAMY,QACX,gDAAmBZ,EAAMa,QACzB,yCAAYb,EAAMc,UACjBd,EAAMe,QACL,uCAAUf,EAAMe,OAAOC,KAAI,SAACC,GAAD,OAAWA,EAAMnB,QAAMoB,KAAK,gBCjB7DC,EAAUC,gBAAK,kBAAM,gCACrBC,EAAQD,gBAAK,kBAAM,gCACnBE,EAAWF,gBAAK,kBAAM,gCACtBG,EAAWH,gBAAK,kBAAM,iCACtBI,EAAYJ,gBAAK,kBAAM,gCACvBK,EAAaL,gBAAK,kBAAM,gCACxBM,EAAUN,gBAAK,kBAAM,gCAiCZO,UA/BG,WAChB,IAAMC,EAAY3B,YAAYV,EAAcC,eAC5C,OACE,qCACGoC,EAAY,cAACH,EAAD,IAAiB,cAACN,EAAD,IAC9B,eAAC,IAAD,WACE,cAAC,IAAD,CACEU,KAAK,QACLC,QAASF,EAAY,cAAC,IAAD,CAAUG,GAAG,YAAe,cAACV,EAAD,MAEnD,cAAC,IAAD,CACEQ,KAAK,WACLC,QAASF,EAAY,cAAC,IAAD,CAAUG,GAAG,YAAe,cAACT,EAAD,MAEnD,cAAC,IAAD,CACEO,KAAK,UACLC,QAASF,EAAY,cAACJ,EAAD,IAAgB,cAAC,IAAD,CAAUO,GAAG,aAEpD,cAAC,IAAD,CACEF,KAAK,WACLC,QAASF,EAAY,cAACF,EAAD,IAAc,cAAC,IAAD,CAAUK,GAAG,aAElD,cAAC,IAAD,CACEF,KAAK,oBACLC,QAASF,EAAY,cAAC,EAAD,IAAuB,cAAC,IAAD,CAAUG,GAAG,aAE3D,cAAC,IAAD,CAAOD,QAAS,cAACP,EAAD","file":"static/js/8.038d45f1.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"MovieCard\":\"MovieDetailsPage_MovieCard__296gM\",\"MoviePoster\":\"MovieDetailsPage_MoviePoster__2mPAt\",\"MovieDescription\":\"MovieDetailsPage_MovieDescription__37ui0\",\"MovieInfo\":\"MovieDetailsPage_MovieInfo__gvcNZ\",\"MovieInfoLink\":\"MovieDetailsPage_MovieInfoLink__2GEfV\",\"ActiveMovieInfoLink\":\"MovieDetailsPage_ActiveMovieInfoLink__3VcDe\"};","const getIsLoggedIn = (state) => state.auth.isLoggedIn;\n\nconst getUsername = (state) => state.auth.user.name;\n\nconst authSelectors = {\n  getIsLoggedIn,\n  getUsername,\n};\n\nexport default authSelectors;\n","import { Route } from \"react-router-dom\";\nimport { useParams, NavLink, useNavigate } from \"react-router-dom\";\nimport { useState, useEffect, lazy } from \"react\";\nimport s from \"./MovieDetailsPage.module.css\";\nimport { useSelector } from \"react-redux\";\n\nconst MovieDetailsPage = () => {\n  const movie = useSelector((state) => state.movies.items);\n\n  let navigate = useNavigate();\n\n  return (\n    <div className=\"container\">\n      <button type=\"button\" className=\"btn\" onClick={() => navigate(-1)}>\n        Go back\n      </button>\n      {movie && (\n        <div className={s.MovieCard}>\n          <p>ID: {movie.id}</p>\n          <h1>{movie.title}</h1>\n          <p>Year of issue: {movie.year}</p>\n          <p>Format: {movie.format}</p>\n          {movie.actors && (\n            <p>Cast: {movie.actors.map((actor) => actor.name).join(\", \")}</p>\n          )}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default MovieDetailsPage;\n","import { Route, Routes, Navigate } from \"react-router-dom\";\nimport { useSelector } from \"react-redux\";\nimport { lazy } from \"react\";\nimport authSelectors from \"../../redux/auth/authSelectors\";\nimport MovieDetailsPage from \"../MovieDetailsPage/MovieDetailsPage\";\n\nconst AuthNav = lazy(() => import(\"../AuthNav/AuthNav\"));\nconst Login = lazy(() => import(\"../Login/Login\"));\nconst Register = lazy(() => import(\"../Register/Register\"));\nconst NotFound = lazy(() => import(\"../common/404NotFound\"));\nconst MovieList = lazy(() => import(\"../MovieList/MovieList\"));\nconst Navigation = lazy(() => import(\"../Navigation/Navigation\"));\nconst Library = lazy(() => import(\"../Library/Library\"));\n\nconst RoutesNav = () => {\n  const isLogedIn = useSelector(authSelectors.getIsLoggedIn);\n  return (\n    <>\n      {isLogedIn ? <Navigation /> : <AuthNav />}\n      <Routes>\n        <Route\n          path=\"login\"\n          element={isLogedIn ? <Navigate to=\"/movies\" /> : <Login />}\n        />\n        <Route\n          path=\"register\"\n          element={isLogedIn ? <Navigate to=\"/movies\" /> : <Register />}\n        />\n        <Route\n          path=\"/movies\"\n          element={isLogedIn ? <MovieList /> : <Navigate to=\"/login\" />}\n        />\n        <Route\n          path=\"/library\"\n          element={isLogedIn ? <Library /> : <Navigate to=\"/login\" />}\n        />\n        <Route\n          path=\"/movies/:moviesId\"\n          element={isLogedIn ? <MovieDetailsPage /> : <Navigate to=\"/login\" />}\n        />\n        <Route element={<NotFound />} />\n      </Routes>\n    </>\n  );\n};\nexport default RoutesNav;\n"],"sourceRoot":""}