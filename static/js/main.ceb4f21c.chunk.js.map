{"version":3,"sources":["redux/auth/authOperations.js","redux/api/api.js","redux/movies/moviesOperations.js","redux/auth/authSlice.js","redux/movies/moviesAction.js","redux/movies/moviesReducer.js","redux/store.js","App.js","index.js"],"names":["axios","defaults","baseURL","token","headers","common","Authorization","register","createAsyncThunk","credientials","thunkAPI","a","post","data","rejectWithValue","login","logout","_","fetchCurrentUser","credentials","persistedToken","getState","auth","getData","endpoint","get","API_ENDPOINT","fetchMovies","api","getMovie","movieId","getCurrentMovie","addMovie","newMovie","item","console","log","deleteMovie","deleteId","id","delete","authSlice","createSlice","name","initialState","user","email","isLoggedIn","extraReducers","fulfilled","state","action","meta","arg","payload","changeFilter","createAction","itemsReducer","createReducer","builder","addCase","filter","contact","filterReducer","mutateLibReducer","getItemReducer","moviesReducer","combineReducers","items","libraryItems","currentItem","logger","createLogger","collapsed","logEntry","error","timestamp","authPersistConfig","key","storage","whitelist","moviesPersistConfig","blacklist","store","configureStore","reducer","persistReducer","authSliceReducer","movies","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","concat","devTools","process","persistor","persistStore","Routing","lazy","App","dispatch","useDispatch","useEffect","className","fallback","ReactDOM","render","StrictMode","loading","document","getElementById"],"mappings":"mTAGAA,IAAMC,SAASC,QAAU,+BAElB,IAAMC,EAAQ,SACfA,GACFH,IAAMC,SAASG,QAAQC,OAAOC,cAAgBH,GAFrCA,EAAQ,WAKjBH,IAAMC,SAASG,QAAQC,OAAOC,cAAgB,IAI5CC,EAAWC,YACf,gBAD+B,uCAE/B,WAAOC,EAAcC,GAArB,iBAAAC,EAAA,+EAE2BX,IAAMY,KAAK,SAAUH,GAFhD,uBAEYI,EAFZ,EAEYA,KACRV,EAAUU,EAAKV,OAHnB,kBAIWU,GAJX,yDAMWH,EAASI,gBAAgB,yBANpC,yDAF+B,yDAa3BC,EAAQP,YAAiB,aAAD,uCAAe,WAAOC,EAAcC,GAArB,iBAAAC,EAAA,+EAElBX,IAAMY,KAAK,YAAaH,GAFN,uBAEjCI,EAFiC,EAEjCA,KACRV,EAAUU,EAAKV,OAH0B,kBAIlCU,GAJkC,yDAMlCH,EAASI,gBAAgB,yBANS,yDAAf,yDAUxBE,EAASR,YAAiB,cAAD,uCAAgB,WAAOS,EAAGP,GAAV,SAAAC,EAAA,+EAErCX,IAAMY,KAAK,aAF0B,OAG3CT,IAH2C,wEAKpCO,EAASI,gBAAgB,yBALW,wDAAhB,yDASzBI,EAAmBV,YACvB,eADuC,uCAEvC,WAAOW,EAAaT,GAApB,mBAAAC,EAAA,yDACQS,EAAiBV,EAASW,WAAWC,KAAKnB,MADlD,yCAGWO,EAASI,gBAAgB,yBAHpC,cAKEX,EAAUiB,GALZ,kBAO2BpB,IAAMY,KAAK,YAAaO,GAPnD,uBAOYN,EAPZ,EAOYA,KAPZ,kBAQWA,GARX,yCAUIV,IAVJ,kBAWWO,EAASI,gBAAgB,yBAXpC,0DAFuC,0D,4PC5CzCd,IAAMC,SAASC,QAAU,+BAEzB,IAAMqB,EAAU,SAACC,GAAD,OAAcxB,IAAMyB,IAAID,ICFlCE,EAAe,UAEfC,EAAcnB,YAClB,mBADkC,uCAElC,WAAOS,EAAGP,GAAV,iBAAAC,EAAA,+EAE2BiB,EAAA,UAClBF,EADkB,4CAF3B,uBAEYb,EAFZ,EAEYA,KAFZ,kBAKWA,GALX,yDAOWH,EAASI,gBAAgB,4BAPpC,yDAFkC,yDAc9Be,EAAWrB,YACf,kBAD+B,uCAE/B,WAAOsB,EAASpB,GAAhB,iBAAAC,EAAA,+EAE2BiB,EAAA,UAAeF,EAAf,YAA+BI,IAF1D,uBAEYjB,EAFZ,EAEYA,KAFZ,kBAGWA,GAHX,yDAKWH,EAASI,gBAAgB,4BALpC,yDAF+B,yDAY3BiB,EAAkBvB,YACtB,yBADsC,uCAEtC,WAAOsB,EAASpB,GAAhB,iBAAAC,EAAA,+EAE2BiB,EAAA,UAAeF,EAAf,YAA+BI,IAF1D,uBAEYjB,EAFZ,EAEYA,KAFZ,kBAGWA,GAHX,yDAKWH,EAASI,gBAAgB,4BALpC,yDAFsC,yDAYlCkB,EAAWxB,YACf,kBAD+B,uCAE/B,WAAOyB,EAAUvB,GAAjB,iBAAAC,EAAA,+EDtCgBa,ECwCwBE,EDxCdQ,ECwC4BD,EDxCnBjC,IAAMY,KAAKY,EAAUU,GCsCxD,uBAEYrB,EAFZ,EAEYA,KACRsB,QAAQC,IAAR,gBAA6BvB,GAHjC,kBAIWA,GAJX,yDAMWH,EAASI,gBAAgB,4BANpC,kCDtCe,IAACU,EAAUU,ICsC1B,oBAF+B,yDAa3BG,EAAc7B,YAClB,sBADkC,uCAElC,WAAO8B,EAAU5B,GAAjB,SAAAC,EAAA,+EDjDkBa,ECmDOE,EDnDGa,ECmDWD,EDnDJtC,IAAMwC,OAAN,UAAgBhB,EAAhB,YAA4Be,ICiD/D,gCAGWD,GAHX,yDAKW5B,EAASI,gBAAgB,4BALpC,iCDjDiB,IAACU,EAAUe,ICiD5B,oBAFkC,0D,+JCrBrBE,EAzBGC,YAAY,CAC5BC,KAAM,OACNC,aARmB,CACnBC,KAAM,CAAEC,MAAO,MACf3C,MAAO,KACP4C,YAAY,GAMZC,eAAa,mBACVzC,IAAS0C,WADC,SACUC,EAAOC,GAC1BD,EAAML,KAAOM,EAAOC,KAAKC,IAAIP,MAC7BI,EAAM/C,MAAQgD,EAAOG,QAAQnD,MAC7B+C,EAAMH,YAAa,KAJV,cAMVhC,IAAMkC,WANI,SAMOC,EAAOC,GACvBD,EAAML,KAAOM,EAAOC,KAAKC,IAAIP,MAC7BI,EAAM/C,MAAQgD,EAAOG,QAAQnD,MAC7B+C,EAAMH,YAAa,KATV,cAWV/B,IAAOiC,WAXG,SAWQC,EAAOC,GACxBD,EAAML,KAAO,CAAEC,MAAO,MACtBI,EAAM/C,MAAQ,KACd+C,EAAMH,YAAa,KAdV,cAgBV7B,IAAiB+B,WAhBP,SAgBkBC,EAAOC,GAClCD,EAAMH,YAAa,KAjBV,KAsBf,Q,gCChCMQ,EAAeC,YAAa,wB,QCQ5BC,EAAeC,YAAc,IAAI,SAACC,GACtCA,EACGC,QAAQjC,IAAYsB,WAAW,SAAChC,EAAGkC,GAAJ,OAAeA,EAAOG,WACrDM,QAAQ/B,IAASoB,WAAW,SAAChC,EAAGkC,GAAJ,OAAeA,EAAOG,QAAQzC,QAC1D+C,QAAQvB,IAAYY,WAAW,SAACC,EAAOC,GAAR,OAC9BD,EAAMW,QAAO,SAACC,GAAD,OAAaA,EAAQvB,KAAOY,EAAOG,iBAIhDS,EAAgBL,YAAc,IAAI,SAACC,GACvCA,EAAQC,QAAQL,GAAc,SAACL,EAAOC,GAAR,OAAmBA,EAAOG,cAGpDU,EAAmBN,YAAc,IAAI,SAACC,GAC1CA,EAAQC,QAAQ5B,IAASiB,WAAW,SAAChC,EAAGkC,GAAJ,OAAeA,EAAOG,cAGtDW,EAAiBP,YAAc,IAAI,SAACC,GACxCA,EAAQC,QAAQ7B,IAAgBkB,WAAW,SAAChC,EAAGkC,GAAJ,OAAeA,EAAOG,cASpDY,EANOC,YAAgB,CACpCC,MAAOX,EACPY,aAAcL,EACdM,YAAaL,EACbJ,OAAQE,ICnBJQ,EAASC,uBAAa,CAC1BC,UAAW,SAACpD,EAAU8B,EAAQuB,GAAnB,OAAiCA,EAASC,OACrDC,WAAW,IAGPC,EAAoB,CACxBC,IAAK,OACLC,YACAC,UAAW,CAAC,UAGRC,EAAsB,CAC1BH,IAAK,QACLC,YACAC,UAAW,CAAC,SACZE,UAAW,CAAC,WAGDC,EAAQC,YAAe,CAClCC,QAAS,CACP/D,KAAMgE,YAAeT,EAAmBU,GACxCC,OAAQF,YAAeL,EAAqBf,IAG9CuB,WAAY,SAACC,GAAD,OACVA,EAAqB,CACnBC,kBAAmB,CACjBC,eAAgB,CAACC,IAAOC,IAAWC,IAAOC,IAASC,IAAOC,QAE3DC,OAAO5B,IACZ6B,UAAUC,IAGCC,EAAYC,YAAapB,G,sBC7ChCqB,EAAUC,gBAAK,kBAAM,gCAkBZC,MAhBf,WACE,IAAMC,EAAWC,cAMjB,OAJAC,qBAAU,WACRF,EAASzF,iBACR,CAACyF,IAGF,qBAAKG,UAAU,MAAf,SACE,cAAC,WAAD,CAAUC,SAAU,aAApB,SACE,cAACP,EAAD,S,gBCPRQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,UACE,cAAC,IAAD,CAAU/B,MAAOA,EAAjB,SACE,cAAC,IAAD,CAAagC,QAAS,KAAMb,UAAWA,EAAvC,SACE,cAAC,EAAD,YAKRc,SAASC,eAAe,W","file":"static/js/main.ceb4f21c.chunk.js","sourcesContent":["import axios from \"axios\";\nimport { createAsyncThunk } from \"@reduxjs/toolkit\";\n\naxios.defaults.baseURL = \"http://localhost:8000/api/v1\";\n\nexport const token = {\n  set(token) {\n    axios.defaults.headers.common.Authorization = token;\n  },\n  unset() {\n    axios.defaults.headers.common.Authorization = \"\";\n  },\n};\n\nconst register = createAsyncThunk(\n  \"auth/register\",\n  async (credientials, thunkAPI) => {\n    try {\n      const { data } = await axios.post(\"/users\", credientials);\n      token.set(data.token);\n      return data;\n    } catch (error) {\n      return thunkAPI.rejectWithValue(\"Something went wrong\");\n    }\n  }\n);\n\nconst login = createAsyncThunk(\"auth/login\", async (credientials, thunkAPI) => {\n  try {\n    const { data } = await axios.post(\"/sessions\", credientials);\n    token.set(data.token);\n    return data;\n  } catch (error) {\n    return thunkAPI.rejectWithValue(\"Something went wrong\");\n  }\n});\n\nconst logout = createAsyncThunk(\"auth/logout\", async (_, thunkAPI) => {\n  try {\n    await axios.post(\"/sessions\");\n    token.unset();\n  } catch (error) {\n    return thunkAPI.rejectWithValue(\"Something went wrong\");\n  }\n});\n\nconst fetchCurrentUser = createAsyncThunk(\n  \"auth/refresh\",\n  async (credentials, thunkAPI) => {\n    const persistedToken = thunkAPI.getState().auth.token;\n    if (!persistedToken) {\n      return thunkAPI.rejectWithValue(\"Something went wrong\");\n    }\n    token.set(persistedToken);\n    try {\n      const { data } = await axios.post(\"/sessions\", credentials);\n      return data;\n    } catch (error) {\n      token.unset();\n      return thunkAPI.rejectWithValue(\"Something went wrong\");\n    }\n  }\n);\n\nexport { register, logout, login, fetchCurrentUser };\n","import axios from \"axios\";\n\naxios.defaults.baseURL = \"http://localhost:8000/api/v1\";\n\nconst getData = (endpoint) => axios.get(endpoint);\n\nconst saveItem = (endpoint, item) => axios.post(endpoint, item);\n\nconst deleteItem = (endpoint, id) => axios.delete(`${endpoint}/${id}`);\n\nexport { getData, saveItem, deleteItem };\n","import { createAsyncThunk } from \"@reduxjs/toolkit\";\nimport * as api from \"../api/api\";\nconst API_ENDPOINT = \"/movies\";\n\nconst fetchMovies = createAsyncThunk(\n  \"movies/getMovies\",\n  async (_, thunkAPI) => {\n    try {\n      const { data } = await api.getData(\n        `${API_ENDPOINT}?sort=title&order=ASC&limit=10&offset=0`\n      );\n      return data;\n    } catch (error) {\n      return thunkAPI.rejectWithValue(\"Something went wrong...\");\n    }\n  }\n);\n\nconst getMovie = createAsyncThunk(\n  \"movies/getMovie\",\n  async (movieId, thunkAPI) => {\n    try {\n      const { data } = await api.getData(`${API_ENDPOINT}/${movieId}`);\n      return data;\n    } catch (error) {\n      return thunkAPI.rejectWithValue(\"Something went wrong...\");\n    }\n  }\n);\n\nconst getCurrentMovie = createAsyncThunk(\n  \"movies/getCurrentMovie\",\n  async (movieId, thunkAPI) => {\n    try {\n      const { data } = await api.getData(`${API_ENDPOINT}/${movieId}`);\n      return data;\n    } catch (error) {\n      return thunkAPI.rejectWithValue(\"Something went wrong...\");\n    }\n  }\n);\n\nconst addMovie = createAsyncThunk(\n  \"movies/addMovie\",\n  async (newMovie, thunkAPI) => {\n    try {\n      const { data } = await api.saveItem(API_ENDPOINT, newMovie);\n      console.log(`addMovie data`, data);\n      return data;\n    } catch (error) {\n      return thunkAPI.rejectWithValue(\"Something went wrong...\");\n    }\n  }\n);\n\nconst deleteMovie = createAsyncThunk(\n  \"movies/deleteMovies\",\n  async (deleteId, thunkAPI) => {\n    try {\n      await api.deleteItem(API_ENDPOINT, deleteId);\n      return deleteId;\n    } catch (error) {\n      return thunkAPI.rejectWithValue(\"Something went wrong...\");\n    }\n  }\n);\n\nexport { fetchMovies, addMovie, deleteMovie, getMovie, getCurrentMovie };\n","import { createSlice } from \"@reduxjs/toolkit\";\nimport { login, register, logout, fetchCurrentUser } from \"./authOperations\";\n\nconst initialState = {\n  user: { email: null },\n  token: null,\n  isLoggedIn: false,\n};\n\nconst authSlice = createSlice({\n  name: \"auth\",\n  initialState,\n  extraReducers: {\n    [register.fulfilled](state, action) {\n      state.user = action.meta.arg.email;\n      state.token = action.payload.token;\n      state.isLoggedIn = true;\n    },\n    [login.fulfilled](state, action) {\n      state.user = action.meta.arg.email;\n      state.token = action.payload.token;\n      state.isLoggedIn = true;\n    },\n    [logout.fulfilled](state, action) {\n      state.user = { email: null };\n      state.token = null;\n      state.isLoggedIn = false;\n    },\n    [fetchCurrentUser.fulfilled](state, action) {\n      state.isLoggedIn = true;\n    },\n  },\n});\n\nexport default authSlice.reducer;\n","import { createAction } from \"@reduxjs/toolkit\";\n\nconst changeFilter = createAction(\"movies/filter_change\");\n\nexport { changeFilter };\n","import { createReducer, combineReducers } from \"@reduxjs/toolkit\";\nimport { changeFilter } from \"./moviesAction\";\nimport {\n  fetchMovies,\n  addMovie,\n  deleteMovie,\n  getMovie,\n  getCurrentMovie,\n} from \"./moviesOperations\";\n\nconst itemsReducer = createReducer([], (builder) => {\n  builder\n    .addCase(fetchMovies.fulfilled, (_, action) => action.payload)\n    .addCase(getMovie.fulfilled, (_, action) => action.payload.data)\n    .addCase(deleteMovie.fulfilled, (state, action) =>\n      state.filter((contact) => contact.id !== action.payload)\n    );\n});\n\nconst filterReducer = createReducer(\"\", (builder) => {\n  builder.addCase(changeFilter, (state, action) => action.payload);\n});\n\nconst mutateLibReducer = createReducer(\"\", (builder) => {\n  builder.addCase(addMovie.fulfilled, (_, action) => action.payload);\n});\n\nconst getItemReducer = createReducer(\"\", (builder) => {\n  builder.addCase(getCurrentMovie.fulfilled, (_, action) => action.payload);\n});\n\nconst moviesReducer = combineReducers({\n  items: itemsReducer,\n  libraryItems: mutateLibReducer,\n  currentItem: getItemReducer,\n  filter: filterReducer,\n});\nexport default moviesReducer;\n","import { configureStore } from \"@reduxjs/toolkit\";\nimport { createLogger } from \"redux-logger\";\nimport authSliceReducer from \"./auth/authSlice\";\nimport {\n  persistStore,\n  persistReducer,\n  FLUSH,\n  REHYDRATE,\n  PAUSE,\n  PERSIST,\n  PURGE,\n  REGISTER,\n} from \"redux-persist\";\nimport storage from \"redux-persist/lib/storage\";\nimport moviesReducer from \"./movies/moviesReducer\";\n\nconst logger = createLogger({\n  collapsed: (getState, action, logEntry) => !logEntry.error,\n  timestamp: false,\n});\n\nconst authPersistConfig = {\n  key: \"auth\",\n  storage,\n  whitelist: [\"token\"],\n};\n\nconst moviesPersistConfig = {\n  key: \"items\",\n  storage,\n  whitelist: [\"items\"],\n  blacklist: [\"filter\"],\n};\n\nexport const store = configureStore({\n  reducer: {\n    auth: persistReducer(authPersistConfig, authSliceReducer),\n    movies: persistReducer(moviesPersistConfig, moviesReducer),\n    // [filterSlice.name]: filterSlice.reducer,\n  },\n  middleware: (getDefaultMiddleware) =>\n    getDefaultMiddleware({\n      serializableCheck: {\n        ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n      },\n    }).concat(logger),\n  devTools: process.env.NODE_ENV === \"development\",\n});\n\nexport const persistor = persistStore(store);\n","import \"./App.css\";\nimport React, { lazy, Suspense, useEffect } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { fetchCurrentUser } from \"./redux/auth/authOperations\";\nconst Routing = lazy(() => import(\"./components/Routing/Routing\"));\n\nfunction App() {\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchCurrentUser());\n  }, [dispatch]);\n\n  return (\n    <div className=\"App\">\n      <Suspense fallback={\"...loading\"}>\n        <Routing />\n      </Suspense>\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport { store, persistor } from \"./redux/store\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport { PersistGate } from \"redux-persist/integration/react\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <Provider store={store}>\n        <PersistGate loading={null} persistor={persistor}>\n          <App />\n        </PersistGate>\n      </Provider>\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}